{
  "version": 3,
  "file": "meepo-order-pipe.js",
  "sources": [
    "ng://meepo-order-pipe/out/public_api.ts",
    "ng://meepo-order-pipe/out/order.pipe.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { OrderPipe } from './order.pipe';\n\n@NgModule({\n    declarations: [OrderPipe],\n    exports: [OrderPipe],\n    providers: [OrderPipe]\n})\nexport class OrderModule { }",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'orderBy',\n    pure: false\n})\nexport class OrderPipe implements PipeTransform {\n\n    /**\n     * Check if a value is a string\n     *\n     * @param value\n     */\n    static isString(value: any) {\n        return typeof value === 'string' || value instanceof String;\n    }\n\n    /**\n     * Sorts values ignoring the case\n     *\n     * @param a\n     * @param b\n     */\n    static caseInsensitiveSort(a: any, b: any) {\n        if (OrderPipe.isString(a) && OrderPipe.isString(b)) {\n            return a.localeCompare(b);\n        }\n        return OrderPipe.defaultCompare(a, b);\n    }\n\n    /**\n     * Default compare method\n     * \n     * @param a \n     * @param b \n     */\n    static defaultCompare(a: any, b: any) {\n        if (a === b) {\n            return 0;\n        }\n        if (a == null) {\n            return 1;\n        }\n        if (b == null) {\n            return -1;\n        }\n        return a > b ? 1 : -1;\n    }\n\n    \n    static parseExpression(expression: string): string[] {\n        expression = expression.replace(/\\[(\\w+)\\]/g, '.$1');\n        expression = expression.replace(/^\\./, '');\n        return expression.split('.');\n    }\n\n    static getValue(object: any, expression: string[]) {\n        for (let i = 0, n = expression.length; i < n; ++i) {\n            const k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            object = object[k];\n        }\n\n        return object;\n    }\n\n    static setValue(object: any, value: any, expression: string[]) {\n        let i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n\n        object[expression[i]] = value;\n    }\n\n    transform(value: any | any[], expression?: any, reverse?: boolean, isCaseInsensitive: boolean = false, comparator?: Function): any {\n        if (!value) {\n            return value;\n        }\n\n        if (Array.isArray(value)) {\n            return this.sortArray(value, expression, reverse, isCaseInsensitive, comparator);\n        }\n\n        if (typeof value === 'object') {\n            return this.transformObject(value, expression, reverse, isCaseInsensitive, comparator);\n        }\n\n        return value;\n    }\n\n    private sortArray(value: any[], expression?: any, reverse?: boolean, isCaseInsensitive?: boolean, comparator?: Function): any[] {\n        const isDeepLink = expression && expression.indexOf('.') !== -1;\n\n        if (isDeepLink) {\n            expression = OrderPipe.parseExpression(expression);\n        }\n\n        let compareFn: Function;\n\n        if (comparator && typeof comparator === 'function') {\n            compareFn = comparator;\n        } else {\n            compareFn = isCaseInsensitive ? OrderPipe.caseInsensitiveSort : OrderPipe.defaultCompare;\n        }\n\n        let array: any[] = value.sort((a: any, b: any): number => {\n            if (!expression) {\n                return compareFn(a, b);\n            }\n\n            if (!isDeepLink) {\n                if (a && b) {\n                    return compareFn(a[expression], b[expression]);\n                }\n                return compareFn(a, b);\n            }\n\n            return compareFn(OrderPipe.getValue(a, expression), OrderPipe.getValue(b, expression));\n        });\n\n        if (reverse) {\n            return array.reverse();\n        }\n\n        return array;\n    }\n\n    private transformObject(value: any | any[], expression?: any, reverse?: boolean, isCaseInsensitive?: boolean, comparator?: Function): any {\n\n        let parsedExpression = OrderPipe.parseExpression(expression);\n        let lastPredicate = parsedExpression.pop();\n        let oldValue = OrderPipe.getValue(value, parsedExpression);\n\n        if (!Array.isArray(oldValue)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = OrderPipe.getValue(value, parsedExpression);\n        }\n\n        if (!oldValue) {\n            return value;\n        }\n\n        OrderPipe.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n        return value;\n    }\n}"
  ],
  "names": [],
  "mappings": "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"
}
